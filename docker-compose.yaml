networks:
  net:
    driver: bridge


x-environment: &oncall-environment
  DATABASE_TYPE: sqlite3
  BROKER_TYPE: redis
  BASE_URL: http://localhost:8080
  # for oncall db migration, needs to be in an .env file in the root directory
  SECRET_KEY: this_secret_should_be_more_that_32_characters
  FEATURE_PROMETHEUS_EXPORTER_ENABLED: true
#  PROMETHEUS_EXPORTER_SECRET: ${PROMETHEUS_EXPORTER_SECRET:-}
  REDIS_URI: redis://oncall_redis:6379/0
  DJANGO_SETTINGS_MODULE: settings.hobby
  CELERY_WORKER_QUEUE: "default,critical,long,slack,telegram,webhook,retry,celery,grafana"
  CELERY_WORKER_CONCURRENCY: "1"
  CELERY_WORKER_MAX_TASKS_PER_CHILD: "100"
  CELERY_WORKER_SHUTDOWN_INTERVAL: "65m"
  CELERY_WORKER_BEAT_ENABLED: "True"
  GRAFANA_API_URL: http://grafana:3000

volumes:
  oncall_data:
  redis_data:

services:
  ############################################# Visualization ################################################
  grafana:
    image: grafana/grafana:10.3.1
    container_name: grafana
    volumes:
      - ./visualization/grafana/provisioning:/etc/grafana/provisioning
      - ./data/grafana/:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-oncall-app,grafana-llm-app
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - net
    labels:
      org.label-schema.group: 'observability'
    user: root

  ############################################ Metrics #######################################################
  mimir:
    image: grafana/mimir:2.12.0
    container_name: mimir
    expose:
      - 9009
    networks:
      - net
    volumes:
      - ./metrics/mimir/config:/etc/mimir/config
      - ./data/mimir:/tmp/mimir
    command:
      - '-config.file=/etc/mimir/config/mimir.yml'
    restart: unless-stopped
    labels:
      org.label-schema.group: 'observability'
    extra_hosts:
      - "host.docker.internal: 172.17.0.1"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.44.0
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - net
    labels:
      org.label-schema.group: 'observability'

  pushgateway:
    image: prom/pushgateway:v1.4.3
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - net
    labels:
      org.label-schema.group: 'observability'

  nodeexporter:
    image: prom/node-exporter:v1.3.1
    container_name: nodeexporter
    user: root
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - net
    labels:
      org.label-schema.group: 'observability'

  nginxexporter:
    image: nginx/nginx-prometheus-exporter:1.1.0
    container_name: nginx-exporter
    expose:
      - 9113
    command:
      - -nginx.scrape-uri
      - http://nginx:8081/stub_status
    restart: unless-stopped
    networks:
      - net
    depends_on:
      nginx:
        condition: service_started
    labels:
      org.label-schema.group: 'observability'

  ############################################ Logging #######################################################
  loki:
    image: grafana/loki:2.9.4
    container_name: loki
    privileged: true
    user: root
    volumes:
      - ./logs/loki:/etc/loki
      - ./data/loki:/tmp/loki
    command:
      - '-config.file=/etc/loki/config/loki-config.yaml'
    restart: always
    expose:
      - 3100
    networks:
      - net
    labels:
      org.label-schema.group: 'observability'

  #  syslog-ng:
  #    image: linuxserver/syslog-ng:4.5.0
  #    container_name: syslog-ng
  #    user: root
  #    privileged: true
  #    environment:
  #      - PUID=1000
  #      - PGID=1000
  #      - TZ=Etc/UTC
  #    volumes:
  #      - ./logs/syslog/config:/config
  #      - /var/log:/var/log
  #    networks:
  #      - net
  #    ports:
  #      - 514:5514/udp
  #      - 601:6601/tcp
  #      - 6514:6514/tcp
  #    restart: always
  #    labels:
  #      org.label-schema.group: 'observability'

  ############################################ Traces ########################################################
  tempo:
    image: grafana/tempo:2.4.1
    container_name: tempo
    privileged: true
    user: root
    volumes:
      - ./traces/tempo:/etc/tempo
      - ./data/tempo:/tmp/tempo
    command:
      - "-config.file=/etc/tempo/config/tempo.yaml"
    restart: always
    expose:
      - 3200   # tempo
      - 4318   # otlp http
    networks:
      - net
    labels:
      org.label-schema.group: 'observability'

  ############################################ Aggregation ###################################################
  alloy:
    image: grafana/alloy:v1.0.0
    user: root
    privileged: true
    container_name: alloy
    volumes:
      - ./aggregation/alloy/config:/etc/alloy
      - ./data/alloy:/tmp/alloy
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers
    expose:
      - 12345 # dashboard port
      - 51893 # syslog
      - 4318  # oltp http
      - 8027  # app receiver
      - 9999  # logs http
    networks:
      - net
    restart: unless-stopped
    labels:
      org.label-schema.group: 'observability'
    extra_hosts:
      - "host.docker.internal: 10.200.0.1"

  ############################################ Profiling #####################################################
  pyroscope:
    image: grafana/pyroscope:1.5.0
    user: root
    privileged: true
    container_name: pyroscope
    volumes:
      - ./profiling/pyroscope/config:/etc/pyroscope
    command:
      - "-config.file=/etc/pyroscope/pyroscope.yml"
    expose:
      - 4040
    networks:
      - net
    restart: unless-stopped
    labels:
      org.label-schema.group: 'observability'

  ####################################### Incident Response & Management #######################################
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: alertmanager
    volumes:
      - ./visualization/alertmanager/config:/etc/alertmanager/config
      - ./data/alertmanager:/tmp/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config/config.yaml'
      - '--storage.path=/tmp/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - net
    labels:
      org.label-schema.group: 'observability'
    user: root

  oncall_engine:
    image: grafana/oncall
    container_name: oncall_engine
    environment: *oncall-environment
    restart: always
    expose:
      - 8080
    command: sh -c "uwsgi --ini uwsgi.ini"
    volumes:
      - oncall_data:/var/lib/oncall
    depends_on:
      oncall_db_migration:
        condition: service_completed_successfully
      oncall_redis:
        condition: service_healthy
    labels:
      org.label-schema.group: 'observability'
    networks:
        - net

  oncall_celery:
    image: grafana/oncall
    container_name: oncall_celery
    restart: unless-stopped
    command: sh -c "./celery_with_exporter.sh"
    environment: *oncall-environment
    volumes:
      - oncall_data:/var/lib/oncall
    depends_on:
      oncall_db_migration:
        condition: service_completed_successfully
      oncall_redis:
        condition: service_healthy
    labels:
      org.label-schema.group: 'observability'
    networks:
        - net
  
  oncall_db_migration:
    image: grafana/oncall
    container_name: oncall_db_migration
    command: python manage.py migrate --noinput
    environment: *oncall-environment
    volumes:
      - oncall_data:/var/lib/oncall
    depends_on:
      oncall_redis:
        condition: service_healthy
    labels:
      org.label-schema.group: 'observability'
    networks:
        - net

  oncall_redis:
    image: redis:7.0.5
    container_name: oncall_redis
    restart: always
    expose:
      - 6379
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          memory: 500m
          cpus: "0.5"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      timeout: 5s
      interval: 5s
      retries: 10
    labels:
      org.label-schema.group: 'observability'
    networks:
        - net

  ############################################# Network #######################################################
  nginx:
    image: nginx:1.25.3-alpine
    container_name: nginx
    expose:
      - 8081 # nodexexporter
    ports:
      # grafana
      - protocol: tcp
        published: 5000
        target: 5000
      # alloy loki receiver
      - protocol: tcp
        published: 9999
        target: 9999
      # alloy oltp http
      - protocol: tcp
        published: 4318
        target: 4318
      # alloy app receiver
      - protocol: tcp
        published: 8027
        target: 8027
      # pyroscope
      - protocol: tcp
        published: 4040
        target: 4040
      # oncall_engine
      - protocol: tcp
        published: 8080
        target: 8080
    volumes:
      - ./server/nginx:/etc/nginx
    networks:
      - net
    restart: unless-stopped
    labels:
      org.label-schema.group: 'server'

