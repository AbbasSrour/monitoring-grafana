version: "3.7"

volumes:
  PrometheusConfig: { }
  PrometheusData: { }
  GrafanaConfig: { }
  GrafanaData: { }
  AlertManagerConfig: { }
  AlertManagerData: { }
  LokiConfig: { }
  LokiData: { }
  AgentConfig: { }
  AgentData: { }
  TempoConfig: { }
  TempoData: { }
  NginxConfig: {}
  PromtailConfig: {}
  SyslogConfig: {}

networks:
  net:
    driver: bridge

services:
  ############################################# Visualization ################################################
  grafana:
    build:
      context: ./visualization/grafana
      dockerfile: Dockerfile
    container_name: grafana
    volumes:
      - GrafanaData:/var/lib/grafana
      - GrafanaConfig:/etc/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - net
    labels:
      org.label-schema.group: 'Visualization'

  alertmanager:
    build:
      context: ./visualization/alertmanager
      dockerfile: Dockerfile
    container_name: alertmanager
    volumes:
      - AlertManagerConfig:/etc/alertmanager/config
      - AlertManagerData:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config/config.yaml'
      - '--storage.path=/tmp/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - net
    labels:
      org.label-schema.group: 'Visualization'

  ############################################ Metrics #######################################################
  prometheus:
    build:
      context: ./metrics/prometheus
      dockerfile: Dockerfile
    container_name: prometheus
    expose:
      - 9090
    networks:
      - net
    volumes:
      - PrometheusConfig:/etc/prometheus
      - PrometheusData:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/tmp/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    labels:
      org.label-schema.group: 'Metrics'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.44.0
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - net
    labels:
      org.label-schema.group: 'Metrics'

  pushgateway:
    image: prom/pushgateway:v1.4.3
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - net
    labels:
      org.label-schema.group: 'Metrics'

  nodeexporter:
    image: prom/node-exporter:v1.3.1
    container_name: nodeexporter
    user: root
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - net
    labels:
      org.label-schema.group: 'Metrics'

  nginxexporter:
    image: nginx/nginx-prometheus-exporter:0.10
    container_name: nginx-exporter
    expose:
      - 9113
    command:
      - -nginx.scrape-uri
      - http://nginx:8081/stub_status
    restart: unless-stopped
    networks:
      - net
    depends_on:
      nginx:
        condition: service_started
    labels:
      org.label-schema.group: 'Metrics'

  ############################################ Logging #######################################################
  loki:
    build:
      context: ./logs/loki
      dockerfile: Dockerfile
    container_name: loki
    privileged: true
    user: root
    volumes:
      - LokiConfig:/etc/loki
      - LokiData:/tmp/loki
    command:
      - '-config.file=/etc/loki/loki-config.yaml'
    restart: always
    expose:
      - 3100
    networks:
      - net
    labels:
      org.label-schema.group: 'Logging'

  syslog-ng:
    build:
      context: ./logs/syslog
      dockerfile: Dockerfile
    container_name: syslog-ng
    user: root
    privileged: true
    volumes:
      - SyslogConfig:/etc/syslog-ng
      - /var/log:/var/log
    networks:
      - net
    ports:
      - protocol: udp
        published: 514
        target: 514
      - protocol: tcp
        published: 601
        target: 601
    restart: always
    labels:
      org.label-schema.group: 'logging'

  ############################################ Traces ########################################################
  tempo:
    build:
      context: ./traces/tempo
      dockerfile: Dockerfile
    container_name: tempo
    privileged: true
    user: root
    volumes:
      - TempoConfig:/etc/tempo
      - TempoData:/tmp/tempo
    command:
      - "-config.file=/etc/tempo/tempo.yaml"
    restart: always
    expose:
      - 3200   # tempo
      - 4317   # otlp grpc
      - 4318   # otlp http
    networks:
      - net
    labels:
      org.label-schema.group: 'Traces'

  ############################################ Aggregation ###################################################
  agent:
    build:
      context: ./aggregation/agent
      dockerfile: Dockerfile
    container_name: agent
    privileged: true
    user: root
    volumes:
      - AgentConfig:/etc/agent
      - AgentData:/tmp/agent
    command:
      - '-config.file=/etc/agent/agent.yaml'
    restart: always
    networks:
      - net
    labels:
      org.label-schema.group: 'Aggregation'

  promtail:
    build:
      context: ./aggregation/promtail
      dockerfile: Dockerfile
    user: root
    privileged: true
    container_name: promtail
    command:
      - '-config.file=/etc/promtail/promtail.yaml'
    volumes:
      - PromtailConfig:/etc/promtail
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers
    expose:
      - 9080
      - 1514
    networks:
      - net
    restart: unless-stopped
    labels:
      org.label-schema.group: 'Aggregation'

  ############################################# Network #######################################################
  nginx:
    build:
      context: ./server/nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      # grafana
      - protocol: tcp
        published: 5000
        target: 5000
      # loki
      - protocol: tcp
        published: 3100
        target: 3100
      # tempo
      - protocol: tcp
        published: 3200
        target: 3200
      # tempo oltp grpc
      - protocol: tcp
        published: 4317
        target: 4317
      # tempo oltp http
      - protocol: tcp
        published: 4318
        target: 4318
      # prometheus
      - protocol: tcp
        published: 8081
        target: 8081
    volumes:
      - NginxConfig:/etc/nginx
    networks:
      - net
    restart: unless-stopped
    labels:
      org.label-schema.group: 'Network'

