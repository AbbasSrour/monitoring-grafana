server:
  log_level: debug

metrics:
  wal_directory: /tmp/wal
  global:
    scrape_interval: 60s
    remote_write:
      - url: http://prometheus:9090/api/prom/push
  configs:
    - name: package
      scrape_configs:
        - job_name: server
          static_configs:
            - targets:
                - server:8000

logs:
  positions_directory: /tmp/loki-pos
  configs:
    - name: frontend
      clients:
        - url: http://loki:3100/loki/api/v1/push
      positions:
        filename: /tmp/loki-pos/client-positions.yaml
    - name: server
      clients:
        - url: http://loki:3100/loki/api/v1/push
      positions:
        filename: /tmp/loki-pos/server-positions.yaml
      scrape_configs:
        - job_name: server
          static_configs:
            - targets:
                - 'localhost'
              labels:
                app: server
                __path__: /var/log/server.log

traces:
  configs:
    - name: package
      remote_write:
        - endpoint: tempo:4318
          insecure: true
      receivers:
        otlp:
          protocols:
            http:
              cors:
                allowed_origins:
                  - "*"
                max_age: 172800

integrations:
  app_agent_receiver_configs:
    - autoscrape:
        enable: true
        metrics_instance: package
      instance: package

      logs_instance: frontend
#      logs_end_timeout: 5s
      logs_send_timeout: 5000
      logs_labels:
        app: frontend
        kind: ''

      traces_instance: package
      sourcemaps: # download source map and use it to transform stack trace locations
        download: true # will download source file, extract source map location,

      server:
        host: 0.0.0.0
        port: 8027
        api_key: 'secret' # optional, if set, client will be required to provide it via x-api-key header
        cors_allowed_origins:
          - '*'
#        max_allowed_message_size: 5e+07
#        rate_limit:
#          enabled: true
#          burstiness: 100
#          rps: 100